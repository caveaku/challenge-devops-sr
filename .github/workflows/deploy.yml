name: Deploy CDK

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  NODE_OPTIONS: "--no-warnings"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install --no-package-lock --no-save

      - name: Run tests
        run: npm test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::314146335501:role/cdk-role
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-CDK-Deploy
          role-duration-seconds: 3600

      - name: Verify AWS credentials
        run: aws sts get-caller-identity

      - name: Check for existing OIDC provider
        id: oidc-check
        run: |
          if aws iam get-open-id-connect-provider \
            --open-id-connect-provider-arn "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com" >/dev/null 2>&1; then
            echo "oidc_exists=true" >> $GITHUB_OUTPUT
          else
            echo "oidc_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Delete existing OIDC provider if needed
        if: steps.oidc-check.outputs.oidc_exists == 'true'
        run: |
          aws iam delete-open-id-connect-provider \
            --open-id-connect-provider-arn "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com"

      - name: CDK Deploy
        run: npx cdk deploy --require-approval never --verbose
