name: Deploy CDK

on:
  push:
    branches:
      - main

permissions:
  id-token: write   # Required for OIDC authentication
  contents: read    # Required to checkout code

env:
  AWS_REGION: us-east-1
  NODE_OPTIONS: "--no-warnings"  # Suppresses Node.js warnings

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # LTS version 20
          # Explicitly no caching parameters included

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Verify clean installation environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "No caching will be used for this installation"

      - name: Install dependencies
        run: |
          npm install --no-package-lock --no-save
          # Force fresh install without lockfile usage

      - name: Run tests
        run: npm test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::314146335501:role/cdk-role
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-CDK-Deploy
          role-duration-seconds: 3600

      - name: Verify AWS credentials
        run: aws sts get-caller-identity

      - name: CDK Bootstrap
        run: npx cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }}
        continue-on-error: true  # Allows workflow to continue if already bootstrapped

      - name: CDK Synth
        run: npx cdk synth

      - name: CDK Diff
        run: npx cdk diff

      - name: CDK Deploy
        run: npx cdk deploy --require-approval never --verbose
